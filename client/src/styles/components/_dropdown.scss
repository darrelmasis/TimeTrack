$dropdown-theme-colors:(
  primary: $blues,
  secondary: $grays,
  danger: $reds,
  warning: $yellows,
  success: $greens,
);

$dropdown-item-light-colors: (
  primary:(
    hover: "400",
    active: "500",
    text-color: "950"
  ),

  secondary:(
    hover: "400",
    active: "500",
    text-color: "950"
  ),

  danger:(
    hover: "400",
    active: "500",
    text-color: "950"
  ),

  warning:(
    hover: "400",
    active: "500",
    text-color: "950"
  ),

  success:(
    hover: "400",
    active: "500",
    text-color: "950"
  ),

  initial:(
    hover: "50",
    active: "100",
  )
);

$dropdown-item-dark-colors: (
  primary:(
    hover: "400",
    active: "300",
    text-color: "950"
  ),

  secondary:(
    hover: "400",
    active: "300",
    text-color: "950"
  ),

  danger:(
    hover: "400",
    active: "300",
    text-color: "950"
  ),

  warning:(
    hover: "200",
    active: "150",
    text-color: "950"
  ),

  success:(
    hover: "400",
    active: "300",
    text-color: "950"
  ),

  initial:(
    hover: "850",
    active: "800",
  )
);

@function get-dropdown-state($theme, $state, $variant: 'light') {
  @if $variant == 'dark' {
    @return map-get(map-get($dropdown-item-dark-colors, #{$theme}), $state);
  }
  @return map-get(map-get($dropdown-item-light-colors, #{$theme}), $state);
}

.dropdown {
  --dropdown-border: #{$border-width} #{$border-style} var(--border-color);
  --dropdown-menu-bg: var(--container-bg);
  --dropdown-button-padding: .375rem;
  --dropdown-item-text-color: var(--text-color);

  @include dropdown-item-initial(map-get($dropdown-theme-colors, 'secondary'), get-dropdown-state('initial','hover'), get-dropdown-state('initial','active'));

  position: relative;

  &-menu {
    position: absolute;
    background-color: var(--dropdown-menu-bg);
    width: max-content;
  }


  &.open &-button::after {
    transform: rotate(-180deg);
  }

  // los estilos de este botón no se puede reutilizar porque unicamente están para el dropdown del header
  &-button {
    border-radius: $border-radius-pill;
    padding: var(--dropdown-button-padding);
    background-color: var(--body-bg);
    height: auto;
    width: auto;
    &::after {
      transition: transform 300ms;
    }
  }

  &-item {
    display: flex;
    align-items: center;
    width: 100%;
    padding: .5rem 1rem;
    border-radius: .375em;
    text-decoration: none;
    color: var(--dropdown-item-text-color);
    user-select: none;

    &:hover {
      background-color: var(--dropdown-item-bg-hover);
      color: var(--dropdown-item-text-color-hover);
    }

    &:active {
      background-color: var(--dropdown-item-bg-active);
      color: var(--dropdown-item-text-color-hover);
    }

    &-text {
      display: flex;
      align-items: center;
    }
  }

  &-divider {
    height: 0;
    margin: 1rem 0;
    border: 0;
    border-top: var(--dropdown-border);
    overflow: hidden;
  }
}

body.dark .dropdown {
  --dropdown-item-active-bg: #{darken($body-bg-alt, 3%)};
}

.caret::after {
  content: '';
  display: inline-block;
  width: .75rem;
  min-width: .75rem;
  height: 1rem;
  background-color: var(--text-color);
  vertical-align: -4px;
  margin-left: .5rem;
  margin-right: .625rem;
  mask-image: url(../assets/icons/caret-down.svg);
  mask-size: 100%;
  mask-position: center;
  mask-repeat: no-repeat;
}


body.dark .dropdown {
  @include dropdown-item-initial(map-get($dropdown-theme-colors, 'secondary'), get-dropdown-state('initial','hover', 'dark'), get-dropdown-state('initial', 'active', 'dark'));
}

@each $theme-color, $theme-value in $dropdown-theme-colors {
  .dropdown-item-#{$theme-color} {
    @include dropdown-item-variant($theme-value, get-dropdown-state($theme-color, 'hover'), get-dropdown-state($theme-color, 'active'), get-dropdown-state($theme-color, 'text-color'))
  }
}

@each $theme-color, $theme-value in $dropdown-theme-colors {
  body.dark .dropdown-item-#{$theme-color} {
    @include dropdown-item-variant($theme-value, get-dropdown-state($theme-color, 'hover', 'dark'), get-dropdown-state($theme-color, 'active','dark'), get-dropdown-state($theme-color, 'text-color', 'dark'))
  }
}