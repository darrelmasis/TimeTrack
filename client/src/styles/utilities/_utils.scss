$flexbox-classes: (
  "display": (
    property: display,
    class: d,
    values: inline inline-block block grid inline-grid flex inline-flex none
  ),
  "align-items": (
    property: align-items,
    class: align-items,
    values: flex-start flex-end center baseline stretch
  ),
  "justify-content": (
    property: justify-content,
    class: justify-content,
    values: flex-start flex-end center space-between space-around space-evenly
  ),
  "flex-direction": (
    property: flex-direction,
    class: flex-direction,
    values: row row-reverse column column-reverse
  ),
  "text-center": (
    property: text-align,
    class: text,
    values: start end center justify
  ),
  "position": (
    property: position,
    class: position,
    values: static relative absolute fixed sticky
  ),
  "z-index": (
    property: z-index,
    class: z-index,
    values: 1 2 3 4 5 6 7 8 9 10 11 12
  ),
  "width": (
    property: width,
    class: w,
    values: 25 50 75 100 auto,
    measurement: '%'
  ),
  "height": (
    property: height,
    class: h,
    values: 25 50 75 100 auto,
    measurement: '%'
  ),
  "white-space": (
    property: white-space,
    class: white-space,
    values: normal nowrap pre pre-wrap pre-line
  ),
  "overflow": (
    property: overflow,
    class: overflow,
    values: visible hidden clip scroll auto
  ),
);

@each $property-name, $property-values in $flexbox-classes {
  $property-property: map-get($property-values, property);
  $property-class: map-get($property-values, class);
  $measurement: map-get($property-values, measurement);

  @each $value in map-get($property-values, values) {

    $class-name: #{$property-class}-#{$value};
    .#{$class-name} {
      #{$property-property}: #{$value}#{$measurement};
    }

    // Clases responsivas
    @each $breakpoint, $breakpoint-value in $breakpoints {
      $responsive-class-name: #{$property-class}-#{$breakpoint}-#{$value};

      @media (min-width: $breakpoint-value) {
        .#{$responsive-class-name} {
          #{$property-property}: #{$value}#{$measurement}!important;
        }
      }
    }
  }
}
